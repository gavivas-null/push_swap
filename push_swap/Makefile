NAME = push_swap

CC = cc
CFLAGS = -Wall -Wextra -Werror -g
#CFLAGS += -fsanitize=address

SRCS =	src/push_swap.c \
		src/list_stack.c \
		src/parsing/assign_index.c \
		src/parsing/build_stack.c \
		src/parsing/duplicates.c \
		src/parsing/parse_args.c \
		src/parsing/range.c \
		src/parsing/sorted.c \
		src/parsing/validate.c \
		src/algorithm/algorithm.c


OBJS = $(SRCS:.c=.o)
INCLUDES = -I include -I Libft
LIBFT = Libft/libft.a

# --------------------------------------------------------------
# ðŸ‘‡ Regla principal
# --------------------------------------------------------------
all: $(NAME)

$(NAME):	$(OBJS)
			@$(MAKE) -C Libft > /dev/null
			@$(CC) $(CFLAGS) $(INCLUDES) $(OBJS) $(LIBFT) -o $(NAME)
			@echo "âœ… Proyecto compilado correctamente."

# --------------------------------------------------------------
# ðŸ›  Compilar cada archivo fuente
# --------------------------------------------------------------
%.o: %.c
	@$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@ > /dev/null
	@echo "ðŸ”§ Compilado: $<"

# --------------------------------------------------------------
# ðŸ§¹ Limpieza
# --------------------------------------------------------------

clean:
	@rm -f $(OBJS) > /dev/null
	@$(MAKE) -C Libft clean > /dev/null
	@echo "ðŸ§¹ Archivos objeto y temporales eliminados."

fclean: clean
	@rm -f $(NAME) > /dev/null
	@$(MAKE) -C Libft fclean > /dev/null
	@echo "ðŸ§¼ Todo limpio: binarios y Libft."

re: fclean all

.PHONY: all clean fclean re libft
